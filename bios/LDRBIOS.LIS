ZSM 4.1	Source file: LDRBIOS  	12-Feb-2020  15:28:28	Page    1
CP/M 3 LOADER BIOS for Z80-MBC2 (A040618)

                                	.z80
                                ;	Converted to Z80 mnemonics via XIZ by Tony Nicholson
                                ;	Assemble using Microsoft M80 or Hector Peraza's ZSM4
                                ;
                                ;******************************************************************************
                                ;
                                ; LRDBIOS.ASM - S180918
                                ; CP/M 3.0 CPMLDR BIOS FOR THE Z80-MBC2 (HW ref. A040618)
                                ;
                                ; Required IOS S220718-R190918 (or newer revisions until otherwise stated)
                                ;
                                ; NOTE: Use the RMAC.COM relocatable assembler
                                ;
                                ;
                                ;
                                ;******************************************************************************
                                
  FFFF  =                       true	equ	-1		; DEFINE LOGICAL VALUES:
  0000  =                       false	equ	not true
                                
  0007  =                       bell	equ	07h
  0000  =                       eos	equ	00h		; End of string
  000D  =                       cr	equ	0dh
  000A  =                       lf	equ	0ah
                                
                                ; -----------------------------------------------------------------------------
                                ;
                                ; Z80-MBC2 IOS equates
                                ;
                                ; -----------------------------------------------------------------------------
                                
  0000  =                       exc$wr$opcd equ	000h		; Address of the EXECUTE WRITE OPCODE write port
  0000  =                       exc$rd$opcd equ	000h		; Address of the EXECUTE READ OPCODE read port
  0001  =                       sto$opcd equ	001h		; Address of the STORE OPCODE write port
  0001  =                       serial$rx equ	001h		; Address of the SERIAL RX read port
  0001  =                       sertx$opc equ	001h		; SERIAL TX opcode
  0009  =                       seldisk$opc equ	009h		; SELDISK opcode
  000A  =                       seltrck$opc equ	00ah		; SELTRACK opcode
  000B  =                       selsect$opc equ	00bh		; SELSECT opcode
  000C  =                       wrtsect$opc equ	00ch		; WRITESECT opcode
  0083  =                       sysflag$opc equ	083h		; SYSFLAG opcode
  0084  =                       datetim$opc equ	084h		; DATETIME opcode
  0085  =                       errdsk$opc equ	085h		; ERRDISK opcode
  0086  =                       rdsect$opc equ	086h		; READSECT opcode
  0087  =                       sdmount$opc equ	087h		; SDMOUNT opcode
                                
                                ; INCLUDE CP/M 3.0 MACRO LIBRARY:
                                
                             C  	include cpm3m80.lib
                             C  	.list
                                
                                ;--------------------------------------------------------------------------
                                ;	                    CODE BEGINS HERE:
                                ;--------------------------------------------------------------------------	
                                
  0000' C3 00A9'                	jp	boot		; <----- INITIAL ENTRY ON COLD START
  0003' C3 00A8'                	jp	wboot		; REENTRY ON PROGRAM EXIT, WARM START
ZSM 4.1	Source file: LDRBIOS  	12-Feb-2020  15:28:28	Page    2
CP/M 3 LOADER BIOS for Z80-MBC2 (A040618)

  0006' C3 0063'                	jp	const		; RETURN CONSOLE INPUT STATUS
  0009' C3 0072'                	jp	conin		; RETURN CONSOLE INPUT CHARACTER
  000C' C3 0078'                	jp	conout		; <------------ SEND CONSOLE OUTPUT CHARACTER
  000F' C3 0069'                	jp	list		; SEND LIST OUTPUT CHARACTER
  0012' C3 006A'                	jp	auxout		; SEND AUXILLIARY OUTPUT CHARACTER
  0015' C3 0075'                	jp	auxin		; RETURN AUXILLIARY INPUT CHARACTER
  0018' C3 008C'                	jp	home		; SET DISKS TO LOGICAL HOME
  001B' C3 0088'                	jp	seldsk		; SELECT DISK DRIVE RETURN DISK PARAMETER INFO
  001E' C3 008F'                	jp	settrk		; SET DISK TRACK
  0021' C3 0094'                	jp	setsec		; SET DISK SECTOR
  0024' C3 0099'                	jp	setdma		; SET DISK I/O MEMORY ADDRESS
  0027' C3 00B0'                	jp	read		; <----------- READ PHYSICAL BLOCK(S)
  002A' C3 00A6'                	jp	write		; WRITE PHYSICAL BLOCK(S)
  002D' C3 0064'                	jp	listst		; RETURN LIST DEVICE STATUS
  0030' C3 009E'                	jp	sectrn		; TRANSLATE LOGICAL TO PHYSICAL SECTOR
  0033' C3 0080'                	jp	conost		; RETURN CONSOLE OUTPUT STATUS
  0036' C3 0065'                	jp	auxist		; RETURN AUXILLIARY INPUT STATUS
  0039' C3 0066'                	jp	auxost		; RETURN AUXILLIARY OUTPUT STATUS
  003C' C3 006B'                	jp	devtbl		; RETURN ADDRESS OF DEVICE DEFINITION TABLE
  003F' C3 006C'                	jp	?cinit		; CHANGE BAUD RATE OF DEVICE
  0042' C3 00A1'                	jp	getdrv		; RETURN ADDRESS OF DISK DRIVE TABLE
  0045' C3 006D'                	jp	multio		; SET MULTIPLE RECORD COUNT FOR DISK I/O
  0048' C3 0067'                	jp	flush		; FLUSH BIOS MAINTAINED DISK CACHING
  004B' C3 0083'                	jp	?move		; BLOCK MOVE MEMORY TO MEMORY
  004E' C3 006E'                	jp	?time		; SIGNAL TIME AND DATE OPERATION
  0051' C3 006F'                	jp	bnksel		; SEL BANK FOR CODE EXECUTION AND DEFAULT DMA
  0054' C3 0070'                	jp	setbnk		; SELECT DIFFERENT BANK FOR DISK I/O DMA OPS.
  0057' C3 0071'                	jp	?xmove		; SET SOURCE AND DEST. BANKS FOR ONE OPERATION
  005A' C3 0000                 	jp	0		; RESERVED FOR FUTURE EXPANSION
  005D' C3 0000                 	jp	0		;     DITTO
  0060' C3 0000                 	jp	0		;     DITTO
                                
                                
  0063'                         const:	
  0063' C9                      	ret			; ROUTINE HAS NO FUNCTION IN LOADER BIOS:
                                
  0064'                         listst:	
  0064' C9                      	ret			; ROUTINE HAS NO FUNCTION IN LOADER BIOS:
                                
  0065'                         auxist:	
  0065' C9                      	ret			; ROUTINE HAS NO FUNCTION IN LOADER BIOS:
                                
  0066'                         auxost:	
  0066' C9                      	ret			; ROUTINE HAS NO FUNCTION IN LOADER BIOS:
                                
  0067'                         flush:	
  0067' AF                      	xor	a		; ROUTINE HAS NO FUNCTION IN LOADER BIOS:
  0068' C9                      	ret			; RETURN A FALSE STATUS
                                
  0069'                         list:	
  0069' C9                      	ret			; ROUTINE HAS NO FUNCTION IN LOADER BIOS:
                                
  006A'                         auxout:	
  006A' C9                      	ret			; ROUTINE HAS NO FUNCTION IN LOADER BIOS:
                                
  006B'                         devtbl:	
  006B' C9                      	ret			; ROUTINE HAS NO FUNCTION IN LOADER BIOS:
ZSM 4.1	Source file: LDRBIOS  	12-Feb-2020  15:28:28	Page    3
CP/M 3 LOADER BIOS for Z80-MBC2 (A040618)

                                
  006C'                         ?cinit:	
  006C' C9                      	ret			; ROUTINE HAS NO FUNCTION IN LOADER BIOS:
                                
  006D'                         multio:	
  006D' C9                      	ret			; ROUTINE HAS NO FUNCTION IN LOADER BIOS:
                                
  006E'                         ?time:	
  006E' C9                      	ret			; ROUTINE HAS NO FUNCTION IN LOADER BIOS:
                                
  006F'                         bnksel:	
  006F' C9                      	ret			; ROUTINE HAS NO FUNCTION IN LOADER BIOS:
                                
  0070'                         setbnk:	
  0070' C9                      	ret			; ROUTINE HAS NO FUNCTION IN LOADER BIOS:
                                
  0071'                         ?xmove:	
  0071' C9                      	ret			; ROUTINE HAS NO FUNCTION IN LOADER BIOS:
                                
  0072'                         conin:	
  0072' 3E 1A                   	ld	a,'Z'-40h	; ROUTINE HAS NO FUNCTION IN LOADER BIOS:
  0074' C9                      	ret
                                
  0075'                         auxin:	
  0075' 3E 1A                   	ld	a,'Z'-40h	; ROUTINE HAS NO FUNCTION IN LOADER BIOS:
  0077' C9                      	ret
                                
  0078'                         conout:
                                				; Write Console Character out. Output char is in C
  0078' 3E 01                   	ld	a, sertx$opc	; A = SERIAL TX opcode
  007A' D3 01                   	out	(sto$opcd),a	; Write the opcode
  007C' 79                      	ld	a, c
  007D' D3 00                   	out	(exc$wr$opcd),a	; Send A to serial Tx
  007F' C9                      	ret
                                
  0080'                         conost:
                                				; Return Output Status of Console. Return A=00H if not ready, A=0FFH if
  0080' 3E FF                   	ld	a, 0ffh		; Always ready
  0082' C9                      	ret
                                
  0083'                         ?move:	
  0083' EB                      	ex	de,hl
  0084' ED B0                   	ldir
  0086' EB                      	ex	de,hl
  0087' C9                      	ret
                                
  0088'                         seldsk:	
  0088' 21 0158'                	ld	hl,dph0		; RETURN DPH ADDRESS FOR DRIVE A:
  008B' C9                      	ret
                                
  008C'                         home:	
  008C' 01 0000                 	ld	bc,0		; HOME SELECTED DRIVE -- TREAT AS SETTRK(0):
                                
  008F'                         settrk:	
  008F' ED 43 0128'             	ld (@trk),bc		; ROUTINE SETS TRACK TO ACCESS ON NEXT READ
  0093' C9                      	ret
                                	
ZSM 4.1	Source file: LDRBIOS  	12-Feb-2020  15:28:28	Page    4
CP/M 3 LOADER BIOS for Z80-MBC2 (A040618)

  0094'                         setsec:	
  0094' ED 43 012C'             	ld (@sect),bc		; ROUTINE SETS SECTOR TO ACCESS ON NEXT READ
  0098' C9                      	ret
                                
  0099'                         setdma:	
  0099' ED 43 012A'             	ld (@dma),bc		; ROUTINE SETS DISK MEMORY ADDRESS FOR READ
  009D' C9                      	ret
                                
  009E'                         sectrn:	
  009E' 69                      	ld	l,c		; NO TRANSLATION FOR HDISK
  009F' 60                      	ld	h,b
  00A0' C9                      	ret
                                
  00A1'                         getdrv:	
  00A1' 21 012E'                	ld	hl,@dtbl	; RETURN ADDRESS OF DISK DRIVE TABLE:
  00A4' C9                      	ret
                                
  00A5'                         dcbinit:
  00A5' C9                      	ret			; ROUTINE HAS NO FUNCTION IN LOADER BIOS:
                                
  00A6'                         write:	
  00A6' AF                      	xor	a		; RETURN GOOD RESULT CODE
  00A7' C9                      	ret
                                
  00A8'                         wboot:	
  00A8' C9                      	ret			; WARM BOOT IS NOT USED IN LOADER BIOS
                                
                                ;--------------------------------------------------------------------------
                                ;                                  BOOT
                                ;                   ROUTINE DOES COLD BOOT INITIALIZATION:
                                ;--------------------------------------------------------------------------
                                
                                
  00A9'                         boot:
  00A9' 21 0104'                	ld	hl, biosmsg	; Print a message
  00AC' CD 00F6'                	call	puts
  00AF' C9                      	ret
                                
                                ;------------------------------------------------------------------------------
                                ;	   HARD DISK READ A SECTOR AT @TRK, @SECT TO Address at @DMA
                                ;      Return A=00H if no Error, A=01H if Non-recov Err
                                ;------------------------------------------------------------------------------
                                
  00B0'                         read:
  00B0' C5                      	push	bc
  00B1' E5                      	push	hl
                                				; 
                                				; Select host disk 0
  00B2' 3A 00F5'                	ld	a,(lastdsk)	; A = last disk number
  00B5' B7                      	or	a		; Set Z flag. Last disk = 0?
  00B6' 28 0A                   	jr	z,settrack	; Yes, jump to track selection
  00B8' 3E 09                   	ld	a, seldisk$opc	; No, select SELDISK opcode (IOS)
  00BA' D3 01                   	out	(sto$opcd),a
  00BC' AF                      	xor	a		; Select the disk 0
  00BD' D3 00                   	out	(exc$wr$opcd),a
  00BF' 32 00F5'                	ld	(lastdsk),a	; Update last disk number        
                                				; 
ZSM 4.1	Source file: LDRBIOS  	12-Feb-2020  15:28:28	Page    5
CP/M 3 LOADER BIOS for Z80-MBC2 (A040618)

                                				; Select @TRK host track
  00C2'                         settrack:
  00C2' 3E 0A                   	ld	a, seltrck$opc	; Select SELTRACK opcode (IOS)
  00C4' D3 01                   	out	(sto$opcd),a
  00C6' 3A 0128'                	ld	a,(@trk)	; Select the track number LSB
  00C9' D3 00                   	out	(exc$wr$opcd),a
  00CB' 3A 0129'                	ld	a,(@trk + 1)	; Select the track number MSB
  00CE' D3 00                   	out	(exc$wr$opcd),a
                                				; 
                                				; Select @SECT host sector
  00D0' 3E 0B                   	ld	a, selsect$opc	; Select SELSECT opcode (IOS)
  00D2' D3 01                   	out	(sto$opcd),a
  00D4' 3A 012C'                	ld	a,(@sect)	; Select the sector number (LSB only)
  00D7' D3 00                   	out	(exc$wr$opcd),a
                                				; 
                                				; Read current host sector (512 byte) to DMA
  00D9' 0E 00                   	ld	c, exc$rd$opcd	; Set the EXECUTE READ OPCODE port into C
  00DB' 2A 012A'                	ld	hl,(@dma)	; HL = DMA address
  00DE' 3E 86                   	ld	a, rdsect$opc	; Select READSECT opcode (IOS)
  00E0' D3 01                   	out	(sto$opcd),a
  00E2' 06 00                   	ld	b, 0		; Byte counter = 256
  00E4' ED B2                   	inir			; Read 256 byte to hstbuf
  00E6' ED B2                   	inir			; Read 256 byte to hstbuf
                                				; 
                                				; Check for errors
  00E8' 3E 85                   	ld	a, errdsk$opc	; Select ERRDISK opcode (IOS)
  00EA' D3 01                   	out	(sto$opcd),a
  00EC' DB 00                   	in	a,(exc$rd$opcd)	; Read error code into A
  00EE' B7                      	or	a		; Set Z flag
  00EF' E1                      	pop	hl
  00F0' C1                      	pop	bc
  00F1' C8                      	ret	z		; Return with A = 0 (no error)
  00F2' 3E 01                   	ld	a, 1		; Set error code
  00F4' C9                      	ret			; Return with A = 1 (read error)
                                	
  00F5' FF                      lastdsk:defb	0ffh		; Last disk number (= ff after cold boot)
                                
                                
                                ;=============================================================================
                                ;                          Z80-MBC2 SUPPORT ROUTINES
                                ;============================================================================= 
                                
                                ; ---------------------------------------------------------------------------- 
                                ;
                                ; Send a string to the serial line, HL holds the pointer to the string.
                                ; NOTE: Only A and HL are used
                                ;
                                ; ---------------------------------------------------------------------------- 
                                
  00F6'                         puts:	
  00F6' 7E                      	ld	a,(hl)		; A = (HL) = current char to print
  00F7' FE 00                   	cp	eos		; End of string reached?
  00F9' C8                      	ret	z		; Yes, return
  00FA' 3E 01                   	ld	a, sertx$opc	; A = SERIAL TX opcode
  00FC' D3 01                   	out	(sto$opcd),a	; Write the opcode
  00FE' 7E                      	ld	a,(hl)		; A = (HL) = current char to print
  00FF' D3 00                   	out	(exc$wr$opcd),a	; Print A
ZSM 4.1	Source file: LDRBIOS  	12-Feb-2020  15:28:28	Page    6
CP/M 3 LOADER BIOS for Z80-MBC2 (A040618)

  0101' 23                      	inc	hl		; Increment character pointer
  0102' 18 F2                   	jr       puts		; Transmit next character
                                
                                
                                ; --------------------------------------------------------------------------- ;
                                ;
                                ; MESSAGES
                                ;
                                ; --------------------------------------------------------------------------- ;
                                
  0104' 0D 0A 0A 5A 38 30       biosmsg:defb	cr, lf, lf, 'Z80-MBC2 CPMLDR BIOS - S180918', cr, lf, eos
  010A' 2D 4D 42 43 32 20       
  0110' 43 50 4D 4C 44 52       
  0116' 20 42 49 4F 53 20       
  011C' 2D 20 53 31 38 30       
  0122' 39 31 38 0D 0A 00       
                                
  0128' ( 0002 )                @trk:	defs	2		; 2 BYTES FOR NEXT TRACK TO READ OR WRITE
  012A' ( 0002 )                @dma:	defs	2		; 2 BYTES FOR NEXT DMA ADDRESS
  012C' ( 0002 )                @sect:	defs	2		; 2 BYTES FOR SECTOR
                                
                                
                                ;--------------------------------------------------------
                                ; BUILD CPM3 DPH'S ETC USING MACROS FOR HDISK AND BY HAND
                                ;--------------------------------------------------------
                                	
                                				; DISK DRIVE TABLE:
  012E' 0158' 0000  0000        @dtbl:	defw	dph0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0
  0134' 0000  0000  0000        
  013A' 0000  0000  0000        
  0140' 0000  0000  0000        
  0146' 0000  0000  0000        
  014C' 0000                    
                                
                                				; DRIVE A DISK PARAMETER HEADER:
  014E' 00A6'                   	defw	write		; WRITE ROUTINE
  0150' 00B0'                   	defw	read		; READ ROUTINE
  0152' 0088'                   	defw	seldsk		; LOGIN PROCEDURE
  0154' 00A5'                   	defw	dcbinit		; DRIVE INITIALIZATION ROUTINE
  0156' 00                      	defb	0		; RELATIVE DRIVE 0 ON THIS CONTROLLER
  0157' 00                      	defb	0		; MEDIA TYPE ALWAYS KNOWN FOR HARD DISK
  0158' 0000                    dph0:	defw	0		; TRANSLATION VECTOR
  015A' 00 00 00 00 00 00       	defb	0,0,0,0,0,0,0,0,0
  0160' 00 00 00                
  0163' 00                      	defb	0		; MEDIA FLAG
  0164' 0171'                   	defw	hd$dpb		; ADDRESS OF DISK PARAMETER BLOCK
  0166' 0982'                   	defw	csv		; CHECKSUM VECTOR
  0168' 059A'                   	defw	alv		; ALLOCATION VECTOR
  016A' 0182'                   	defw	dirbcb		; DIRECTORY BUFFER CONTROL BLOCK
  016C' 018E'                   	defw	databcb		; DATA BUFFER CONTROL BLOCK
  016E' FFFF                    	defw	0ffffh		; NO HASHING
  0170' 00                      	defb	0		; HASH BANK
                                
                                				; HARD DISK PARAMETER BLOCK:
                                				; Bytes per sector, num sec, num trk, block size, dir entries, res trk, HD 
                                	
  0171'                         hd$dpb:	dpb     512,32,512,4096,512,1,8000h
ZSM 4.1	Source file: LDRBIOS  	12-Feb-2020  15:28:28	Page    7
CP/M 3 LOADER BIOS for Z80-MBC2 (A040618)

  0171' 0080                  + 	defw	??0000		; Number of 128 byte records per track
  0173' 05 1F                 + 	defb	??0001,??0002	; block shift and mask
  0175' 01                    + 	defb	??0003		; extent mask
  0176' 07FB                  + 	defw	??0004		; maximum block number
  0178' 01FF                  + 	defw	??0005		; maximum directory entry number
  017A' F0 00                 + 	defb	??0006,??0007	; alloc vector for directory
  017C' 8000                  + 	defw	??0008		; checksum size
  017E' 0001                  + 	defw	1		; offset for system tracks
  0180' 02 03                 + 	defb	??0009,??000A	; physical sector size shift and mask
                                
                                				; DIRECTORY BUFFER CONTROL BLOCK:
  0182'                         dirbcb:
  0182' FF                      	defb	0ffh		; DRIVE 0
  0183' ( 0003 )                	defs	3
  0186' ( 0001 )                	defs	1
  0187' ( 0001 )                	defs	1
  0188' ( 0002 )                	defs	2
  018A' ( 0002 )                	defs	2
  018C' 019A'                   	defw	dirbuf		; POINTER TO DIRECTORY BUFFER
                                
                                				; DATA BUFFER CONTROL BLOCK:
  018E'                         databcb:
  018E' FF                      	defb	0ffh		; DRIVE 0
  018F' ( 0003 )                	defs	3
  0192' ( 0001 )                	defs	1
  0193' ( 0001 )                	defs	1
  0194' ( 0002 )                	defs	2
  0196' ( 0002 )                	defs	2
  0198' 039A'                   	defw	databuf		; POINTER TO DATA BUFFER
                                
                                
                                				; DIRECTORY BUFFER
  019A' ( 0200 )                dirbuf:	defs	512		; 1 PHYSICAL SECTOR
                                
                                				; DATA BUFFER:
  039A' ( 0200 )                databuf:defs	512		; 1 PHYSICAL SECTOR
                                
                                				; DRIVE ALLOCATION VECTOR:
  059A' ( 03E8 )                alv:	defs	1000		; SPACE FOR DOUBLE BIT ALLOCATION VECTORS
  0982'                         csv:				; NO CHECKSUM VECTOR REQUIRED FOR A HDISK
                                
  0000  =                       	end

Errors: 0
ZSM 4.1	Source file: LDRBIOS  	12-Feb-2020  15:28:28	Page    8

Macros:
DPB                       DPH                       DTBL
GCD                       SKEW                      

Symbols:
??0000 ........... 0080   ??0001 ........... 0005   ??0002 ........... 001F 
??0003 ........... 0001   ??0004 ........... 07FB   ??0005 ........... 01FF 
??0006 ........... 00F0   ??0007 ........... 0000   ??0008 ........... 8000 
??0009 ........... 0002   ??000A ........... 0003   ??000B ........... 0004 
?ALL ............. F000   ?CINIT ........... 006C'  ?MOVE ............ 0083'
?SIZE ............ FF80   ?TIME ............ 006E'  ?XMOVE ........... 0071'
@DMA ............. 012A'  @DTBL ............ 012E'  @SECT ............ 012C'
@TRK ............. 0128'  ALV .............. 059A'  AUXIN ............ 0075'
AUXIST ........... 0065'  AUXOST ........... 0066'  AUXOUT ........... 006A'
BELL ............. 0007   BIOSMSG .......... 0104'  BNKSEL ........... 006F'
BOOT ............. 00A9'  CONIN ............ 0072'  CONOST ........... 0080'
CONOUT ........... 0078'  CONST ............ 0063'  CR ............... 000D 
CSV .............. 0982'  DATABCB .......... 018E'  DATABUF .......... 039A'
DATETIM$OPC ...... 0084   DCBINIT .......... 00A5'  DEVTBL ........... 006B'
DIRBCB ........... 0182'  DIRBUF ........... 019A'  DPH0 ............. 0158'
EOS .............. 0000   ERRDSK$OPC ....... 0085   EXC$RD$OPCD ...... 0000 
EXC$WR$OPCD ...... 0000   FALSE ............ 0000   FLUSH ............ 0067'
GETDRV ........... 00A1'  HD$DPB ........... 0171'  HOME ............. 008C'
LASTDSK .......... 00F5'  LF ............... 000A   LIST ............. 0069'
LISTST ........... 0064'  MULTIO ........... 006D'  PUTS ............. 00F6'
RDSECT$OPC ....... 0086   READ ............. 00B0'  SDMOUNT$OPC ...... 0087 
SECTRN ........... 009E'  SELDISK$OPC ...... 0009   SELDSK ........... 0088'
SELSECT$OPC ...... 000B   SELTRCK$OPC ...... 000A   SERIAL$RX ........ 0001 
SERTX$OPC ........ 0001   SETBNK ........... 0070'  SETDMA ........... 0099'
SETSEC ........... 0094'  SETTRACK ......... 00C2'  SETTRK ........... 008F'
STO$OPCD ......... 0001   SYSFLAG$OPC ...... 0083   TRUE ............. FFFF 
WBOOT ............ 00A8'  WRITE ............ 00A6'  WRTSECT$OPC ...... 000C 

